module State_Machine(
input LB, RB, clk_i, reset_n,
output   Len, Ldir, Ren, Rdir);
	
reg [2:0]state;
reg [2:0]state_n;
 
parameter S0 = 3'b000;
parameter S1 = 3'b001;
parameter S2 = 3'b010;
parameter S3 = 3'b011;
parameter S4 = 3'b100;

always @(*)
begin

case(state)
	S0: 
	if(~LB)
		state_n = S3;			
	else if(~RB) 
		state_n = S1;
	else 
		state_n = S0;
	
	S1: 
		state_n = S2;
	S2: 
		state_n = S0;
	S3:
		state_n = S4;
	S4: 
		state_n = S0;
			

	default: 

			state_n = S0;
	endcase 
	
end

always @(posedge clk_i, negedge reset_n)
	begin
	if (~reset_n)
		state = S0;
	else state = state_n;
		end
assign Len = 1'b0;
assign Ren = 1'b0;
 assign Ldir = ~(state == S1 || state == S2 || state == S3);
 assign Rdir = ~(state == S1 || state == S3 || state == S4);
endmodule
